{"version":3,"sources":["Logo.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Logo","size","width","height","xmlns","fill","className","viewBox","id","gradientTransform","offset","stop-color","d","DiningChoice","choices","useState","choice","setChoice","spacing","onClick","sample","colorScheme","App","maxW","my","fontWeight","pb","ml","mt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAeeA,MAbf,YAA2C,IAA3BC,EAA0B,EAA1BA,KACd,OACE,sBAAKC,MAAOD,EAAME,OAAQF,EAAMG,MAAM,6BAA6BC,KAAK,eAAeC,UAAU,yBAAyBC,QAAQ,YAAlI,UACE,+BACE,iCAAgBC,GAAG,WAAWC,kBAAkB,aAAhD,UACE,sBAAMC,OAAO,KAAKC,aAAW,YAC7B,sBAAMD,OAAO,OAAOC,aAAW,iBAGnC,sBAAMN,KAAK,iBAAiBO,EAAE,yKCJpC,SAASC,IACP,IAAMC,EAAU,CACd,qBACA,qBACA,qBACA,2BACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,eACA,qBACA,qBACA,eACA,qBACA,qBACA,qBACA,iCACA,iCACA,2BACA,qBACA,2BACA,qBACA,2BACA,gBA1BoB,EA4BMC,qBA5BN,mBA4BfC,EA5Be,KA4BPC,EA5BO,KA6BtB,OAAO,eAAC,IAAD,CAAOC,QAAS,EAAhB,UACL,cAAC,IAAD,CAASjB,KAAK,KAAd,kDACA,eAAC,IAAD,CAAQiB,QAAS,EAAjB,UACE,cAAC,IAAD,CAAQC,QAAS,kBAAMF,EAAUG,iBAAON,KAAWO,YAAY,OAA/D,4CACA,cAAC,IAAD,UAAOL,UAqBEM,MAjBf,WACE,OACE,eAAC,IAAD,CAAWC,KAAK,eAAeC,GAAI,EAAnC,UACE,cAAC,IAAD,CAASvB,KAAK,KAAKwB,WAAW,SAA9B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMD,GAAI,EAAV,kBACA,eAAC,IAAD,CAAKE,GAAG,OAAOC,GAAI,EAAnB,UAAsB,cAAC,EAAD,CAAM1B,KAAK,SAAjC,OACA,cAAC,IAAD,CAAM0B,GAAI,EAAGH,GAAI,EAAjB,6BAGJ,cAAC,IAAD,CAAON,QAAS,EAAGU,GAAI,EAAvB,SACE,cAACf,EAAD,UCzCOgB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e1c73134.chunk.js","sourcesContent":["/* eslint-disable */\n\nfunction Logo({ size }: { size: string }) {\n  return (\n    <svg width={size} height={size} xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" className=\"bi bi-plus-square-fill\" viewBox=\"0 0 16 16\">\n      <defs>\n        <linearGradient id=\"gradient\" gradientTransform=\"rotate(45)\">\n          <stop offset=\"0%\" stop-color=\"#24C6DC\" />\n          <stop offset=\"100%\" stop-color=\"#514A9D\" />\n        </linearGradient>\n      </defs>\n      <path fill=\"url(#gradient)\" d=\"M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2zm6.5 4.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3a.5.5 0 0 1 1 0z\" />\n    </svg>)\n}\n\nexport default Logo\n","import { Button } from '@chakra-ui/button'\nimport { Box, Container, Flex, Heading, HStack, Stack, Text } from '@chakra-ui/layout'\nimport { sample } from 'lodash'\nimport React, { useState } from 'react'\n\nimport Logo from './Logo'\n\nfunction DiningChoice() {\n  const choices = [\n    \"肯德基\",\n    \"汉堡王\",\n    \"乐凯撒\",\n    \"江边城外\",\n    \"小菜园\",\n    \"避风塘\",\n    \"星伦多\",\n    \"聚兴阁\",\n    \"吴老九\",\n    \"红魔\",\n    \"捞王\",\n    \"苏小柳\",\n    \"韩宫宴\",\n    \"发添\",\n    \"佬肥猫\",\n    \"萨莉亚\",\n    \"肯塔尔\",\n    \"西贝莜面村\",\n    \"寿司沼津港\",\n    \"谷田稻香\",\n    \"金饭碗\",\n    \"三鱼旨川\",\n    \"鱼旨匠\",\n    \"尚品天泰\",\n    \"毕真\"\n  ]\n  const [choice, setChoice] = useState<String>()\n  return <Stack spacing={3}>\n    <Heading size=\"lg\">天街吃饭指南</Heading>\n    <HStack spacing={5}>\n      <Button onClick={() => setChoice(sample(choices))} colorScheme=\"blue\">今天吃啥？</Button>\n      <Text>{choice}</Text>\n    </HStack>\n  </Stack>\n}\nfunction App() {\n  return (\n    <Container maxW=\"container.md\" my={5}>\n      <Heading size=\"md\" fontWeight=\"normal\">\n        <Flex>\n          <Text my={1}>SJTU</Text>\n          <Box pb=\"1rem\" ml={1}><Logo size=\"1rem\" /> </Box>\n          <Text ml={1} my={1}>· Tools</Text>\n        </Flex>\n      </Heading>\n      <Stack spacing={3} mt={5}>\n        <DiningChoice></DiningChoice>\n      </Stack>\n    </Container>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import './index.scss'\nimport 'bootstrap-icons/font/bootstrap-icons.css'\n\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}